# Generated by Django 5.1 on 2024-12-07 02:27

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('appointment_id', models.CharField(db_index=True, max_length=8, primary_key=True, serialize=False, unique=True)),
                ('relationship', models.CharField(max_length=10)),
                ('state', models.CharField(db_index=True, max_length=8, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('department_id', models.CharField(db_index=True, max_length=3, primary_key=True, serialize=False, unique=True)),
                ('department_name', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('image_id', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('image', models.ImageField(upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='Pharmacy',
            fields=[
                ('pharmacy_id', models.CharField(max_length=2, primary_key=True, serialize=False, unique=True)),
                ('pharmacy_name', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('admin_id', models.CharField(db_index=True, max_length=3, primary_key=True, serialize=False, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('name', models.CharField(max_length=15)),
                ('groups', models.ManyToManyField(related_name='admin_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='admin_permissions', to='auth.permission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('doctor_id', models.CharField(db_index=True, max_length=5, primary_key=True, serialize=False, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('name', models.CharField(max_length=15)),
                ('gender', models.CharField(max_length=1)),
                ('title', models.CharField(max_length=10)),
                ('introduction', models.TextField()),
                ('groups', models.ManyToManyField(related_name='doctor_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='doctor_permissions', to='auth.permission')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MedicalSystem.image')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('diagnosis_id', models.CharField(max_length=8, primary_key=True, serialize=False, unique=True)),
                ('examination', models.TextField()),
                ('examination_result', models.TextField()),
                ('reference', models.TextField()),
                ('clinical_diagnosis', models.TextField()),
                ('diagnosis_time', models.DateTimeField()),
                ('id_number', models.CharField(max_length=18)),
                ('appointment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MedicalSystem.appointment')),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MedicalSystem.doctor')),
            ],
        ),
        migrations.CreateModel(
            name='ExaminationArrangement',
            fields=[
                ('examination_id', models.CharField(db_index=True, max_length=8, primary_key=True, serialize=False, unique=True)),
                ('examination', models.TextField()),
                ('examination_date', models.DateField()),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MedicalSystem.doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Drug',
            fields=[
                ('drug_id', models.CharField(max_length=9, primary_key=True, serialize=False, unique=True)),
                ('drug_name', models.CharField(max_length=20)),
                ('price', models.FloatField()),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MedicalSystem.image')),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('prescription_id', models.CharField(max_length=8, primary_key=True, serialize=False, unique=True)),
                ('drug_amount', models.IntegerField()),
                ('usage', models.TextField()),
                ('precautions', models.TextField()),
                ('diagnosis', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='MedicalSystem.diagnosis')),
                ('drug', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MedicalSystem.drug')),
            ],
        ),
        migrations.AddField(
            model_name='diagnosis',
            name='prescription',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='diagnoses', to='MedicalSystem.prescription'),
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('schedule_id', models.CharField(max_length=8, primary_key=True, serialize=False, unique=True)),
                ('schedule_time', models.DateTimeField(max_length=6)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MedicalSystem.department')),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MedicalSystem.doctor')),
            ],
        ),
        migrations.AddField(
            model_name='appointment',
            name='schedule',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MedicalSystem.schedule'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('user_id', models.CharField(db_index=True, max_length=8, primary_key=True, serialize=False, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('name', models.CharField(max_length=15)),
                ('gender', models.CharField(max_length=1)),
                ('birth', models.DateField()),
                ('id_number', models.CharField(db_index=True, max_length=18)),
                ('user_type', models.CharField(max_length=1)),
                ('phone', models.CharField(max_length=11)),
                ('groups', models.ManyToManyField(related_name='user_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='user_permissions', to='auth.permission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_id', models.CharField(max_length=8, primary_key=True, serialize=False, unique=True)),
                ('payment_name', models.CharField(max_length=20)),
                ('payment_description', models.TextField()),
                ('money', models.FloatField()),
                ('is_paid', models.BooleanField()),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notification_id', models.CharField(max_length=8, primary_key=True, serialize=False, unique=True)),
                ('notification', models.TextField()),
                ('notification_time', models.DateTimeField()),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FamilyMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family_id', models.CharField(max_length=2)),
                ('relationship', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=15)),
                ('gender', models.CharField(max_length=1)),
                ('birth', models.DateField()),
                ('id_number', models.CharField(db_index=True, max_length=18)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExaminationInfo',
            fields=[
                ('exam_appointment_id', models.CharField(db_index=True, max_length=8, primary_key=True, serialize=False, unique=True)),
                ('examination_result', models.TextField(blank=True, null=True)),
                ('state', models.CharField(max_length=8, null=True)),
                ('examination_arrangement', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MedicalSystem.examinationarrangement')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('evaluation_id', models.CharField(max_length=8, primary_key=True, serialize=False, unique=True)),
                ('evaluation', models.TextField()),
                ('evaluation_star', models.IntegerField()),
                ('evaluation_time', models.DateTimeField()),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MedicalSystem.doctor')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='appointment',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DrugInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drug_id', models.CharField(max_length=9)),
                ('drug_amount', models.IntegerField()),
                ('pharmacy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MedicalSystem.pharmacy')),
            ],
            options={
                'indexes': [models.Index(fields=['drug_id', 'pharmacy'], name='MedicalSyst_drug_id_c1a6ae_idx')],
                'constraints': [models.UniqueConstraint(fields=('drug_id', 'pharmacy'), name='unique_drug_pharmacy')],
            },
        ),
        migrations.AddIndex(
            model_name='schedule',
            index=models.Index(fields=['doctor', 'department'], name='MedicalSyst_doctor__78bcee_idx'),
        ),
        migrations.AddIndex(
            model_name='schedule',
            index=models.Index(fields=['doctor', 'schedule_time'], name='MedicalSyst_doctor__ed3ebc_idx'),
        ),
        migrations.AddIndex(
            model_name='familymember',
            index=models.Index(fields=['family_id', 'user'], name='MedicalSyst_family__8178f8_idx'),
        ),
        migrations.AddConstraint(
            model_name='familymember',
            constraint=models.UniqueConstraint(fields=('family_id', 'user'), name='unique_family_teacher'),
        ),
        migrations.AddIndex(
            model_name='evaluation',
            index=models.Index(fields=['doctor', 'evaluation_time'], name='MedicalSyst_doctor__5f96e2_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['relationship', 'user'], name='MedicalSyst_relatio_a88889_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['schedule', 'state'], name='MedicalSyst_schedul_febc1e_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['user', 'state'], name='MedicalSyst_user_id_ed4780_idx'),
        ),
    ]
